/*
 * Deutscher Bundestag - DIP
 * API des Dokumentations- und Informationssystems für Parlamentsmaterialien
 *
 * The version of the OpenAPI document: 1.3
 * Contact: parlamentsdokumentation@bundestag.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Jeder Vorgangsschritt ist entweder dem Bundestag (BT), dem Bundesrat (BR), der Bundesversammlung (BV) oder der Europakammer (EK) zugeordnet. Über die Zuordnung lassen sich bspw. Rechtsverordnungen herausfiltern, an denen der Bundestag beteiligt / nicht beteiligt war.
 */
@JsonAdapter(Zuordnung.Adapter.class)
public enum Zuordnung {
  
  BT("BT"),
  
  BR("BR"),
  
  BV("BV"),
  
  EK("EK");

  private String value;

  Zuordnung(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Zuordnung fromValue(String value) {
    for (Zuordnung b : Zuordnung.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Zuordnung> {
    @Override
    public void write(final JsonWriter jsonWriter, final Zuordnung enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Zuordnung read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Zuordnung.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    Zuordnung.fromValue(value);
  }
}

