/*
 * Deutscher Bundestag - DIP
 * API des Dokumentations- und Informationssystems f端r Parlamentsmaterialien
 *
 * The version of the OpenAPI document: 1.3
 * Contact: parlamentsdokumentation@bundestag.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Liefert die Angaben zur Verk端ndung eines Gesetzes: Ausfertigungs- und Verk端ndungsdatum sowie die Fundstelle im jeweiligen Verk端ndungsblatt. Bei Bundesgesetzblatt I und II ist die Fundstelle verlinkt. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-15T12:05:00.915435+02:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
public class Verkuendung {
  public static final String SERIALIZED_NAME_JAHRGANG = "jahrgang";
  @SerializedName(SERIALIZED_NAME_JAHRGANG)
  @javax.annotation.Nonnull
  private String jahrgang;

  public static final String SERIALIZED_NAME_HEFTNUMMER = "heftnummer";
  @SerializedName(SERIALIZED_NAME_HEFTNUMMER)
  @javax.annotation.Nullable
  private String heftnummer;

  public static final String SERIALIZED_NAME_SEITE = "seite";
  @SerializedName(SERIALIZED_NAME_SEITE)
  @javax.annotation.Nonnull
  private String seite;

  public static final String SERIALIZED_NAME_AUSFERTIGUNGSDATUM = "ausfertigungsdatum";
  @SerializedName(SERIALIZED_NAME_AUSFERTIGUNGSDATUM)
  @javax.annotation.Nonnull
  private LocalDate ausfertigungsdatum;

  public static final String SERIALIZED_NAME_VERKUENDUNGSDATUM = "verkuendungsdatum";
  @SerializedName(SERIALIZED_NAME_VERKUENDUNGSDATUM)
  @javax.annotation.Nonnull
  private LocalDate verkuendungsdatum;

  public static final String SERIALIZED_NAME_RUBRIK_NR = "rubrik_nr";
  @SerializedName(SERIALIZED_NAME_RUBRIK_NR)
  @javax.annotation.Nullable
  private String rubrikNr;

  public static final String SERIALIZED_NAME_EINLEITUNGSTEXT = "einleitungstext";
  @SerializedName(SERIALIZED_NAME_EINLEITUNGSTEXT)
  @javax.annotation.Nonnull
  private String einleitungstext;

  public static final String SERIALIZED_NAME_VERKUENDUNGSBLATT_BEZEICHNUNG = "verkuendungsblatt_bezeichnung";
  @SerializedName(SERIALIZED_NAME_VERKUENDUNGSBLATT_BEZEICHNUNG)
  @javax.annotation.Nullable
  private String verkuendungsblattBezeichnung;

  public static final String SERIALIZED_NAME_VERKUENDUNGSBLATT_KUERZEL = "verkuendungsblatt_kuerzel";
  @SerializedName(SERIALIZED_NAME_VERKUENDUNGSBLATT_KUERZEL)
  @javax.annotation.Nullable
  private String verkuendungsblattKuerzel;

  public static final String SERIALIZED_NAME_FUNDSTELLE = "fundstelle";
  @SerializedName(SERIALIZED_NAME_FUNDSTELLE)
  @javax.annotation.Nonnull
  private String fundstelle;

  public static final String SERIALIZED_NAME_PDF_URL = "pdf_url";
  @SerializedName(SERIALIZED_NAME_PDF_URL)
  @javax.annotation.Nullable
  private String pdfUrl;

  public static final String SERIALIZED_NAME_TITEL = "titel";
  @SerializedName(SERIALIZED_NAME_TITEL)
  @javax.annotation.Nullable
  private String titel;

  public Verkuendung() {
  }

  public Verkuendung jahrgang(@javax.annotation.Nonnull String jahrgang) {
    this.jahrgang = jahrgang;
    return this;
  }

  /**
   * Get jahrgang
   * @return jahrgang
   */
  @javax.annotation.Nonnull
  public String getJahrgang() {
    return jahrgang;
  }

  public void setJahrgang(@javax.annotation.Nonnull String jahrgang) {
    this.jahrgang = jahrgang;
  }


  public Verkuendung heftnummer(@javax.annotation.Nullable String heftnummer) {
    this.heftnummer = heftnummer;
    return this;
  }

  /**
   * Get heftnummer
   * @return heftnummer
   */
  @javax.annotation.Nullable
  public String getHeftnummer() {
    return heftnummer;
  }

  public void setHeftnummer(@javax.annotation.Nullable String heftnummer) {
    this.heftnummer = heftnummer;
  }


  public Verkuendung seite(@javax.annotation.Nonnull String seite) {
    this.seite = seite;
    return this;
  }

  /**
   * Get seite
   * @return seite
   */
  @javax.annotation.Nonnull
  public String getSeite() {
    return seite;
  }

  public void setSeite(@javax.annotation.Nonnull String seite) {
    this.seite = seite;
  }


  public Verkuendung ausfertigungsdatum(@javax.annotation.Nonnull LocalDate ausfertigungsdatum) {
    this.ausfertigungsdatum = ausfertigungsdatum;
    return this;
  }

  /**
   * Get ausfertigungsdatum
   * @return ausfertigungsdatum
   */
  @javax.annotation.Nonnull
  public LocalDate getAusfertigungsdatum() {
    return ausfertigungsdatum;
  }

  public void setAusfertigungsdatum(@javax.annotation.Nonnull LocalDate ausfertigungsdatum) {
    this.ausfertigungsdatum = ausfertigungsdatum;
  }


  public Verkuendung verkuendungsdatum(@javax.annotation.Nonnull LocalDate verkuendungsdatum) {
    this.verkuendungsdatum = verkuendungsdatum;
    return this;
  }

  /**
   * Get verkuendungsdatum
   * @return verkuendungsdatum
   */
  @javax.annotation.Nonnull
  public LocalDate getVerkuendungsdatum() {
    return verkuendungsdatum;
  }

  public void setVerkuendungsdatum(@javax.annotation.Nonnull LocalDate verkuendungsdatum) {
    this.verkuendungsdatum = verkuendungsdatum;
  }


  public Verkuendung rubrikNr(@javax.annotation.Nullable String rubrikNr) {
    this.rubrikNr = rubrikNr;
    return this;
  }

  /**
   * Get rubrikNr
   * @return rubrikNr
   */
  @javax.annotation.Nullable
  public String getRubrikNr() {
    return rubrikNr;
  }

  public void setRubrikNr(@javax.annotation.Nullable String rubrikNr) {
    this.rubrikNr = rubrikNr;
  }


  public Verkuendung einleitungstext(@javax.annotation.Nonnull String einleitungstext) {
    this.einleitungstext = einleitungstext;
    return this;
  }

  /**
   * Get einleitungstext
   * @return einleitungstext
   */
  @javax.annotation.Nonnull
  public String getEinleitungstext() {
    return einleitungstext;
  }

  public void setEinleitungstext(@javax.annotation.Nonnull String einleitungstext) {
    this.einleitungstext = einleitungstext;
  }


  public Verkuendung verkuendungsblattBezeichnung(@javax.annotation.Nullable String verkuendungsblattBezeichnung) {
    this.verkuendungsblattBezeichnung = verkuendungsblattBezeichnung;
    return this;
  }

  /**
   * Get verkuendungsblattBezeichnung
   * @return verkuendungsblattBezeichnung
   */
  @javax.annotation.Nullable
  public String getVerkuendungsblattBezeichnung() {
    return verkuendungsblattBezeichnung;
  }

  public void setVerkuendungsblattBezeichnung(@javax.annotation.Nullable String verkuendungsblattBezeichnung) {
    this.verkuendungsblattBezeichnung = verkuendungsblattBezeichnung;
  }


  public Verkuendung verkuendungsblattKuerzel(@javax.annotation.Nullable String verkuendungsblattKuerzel) {
    this.verkuendungsblattKuerzel = verkuendungsblattKuerzel;
    return this;
  }

  /**
   * Get verkuendungsblattKuerzel
   * @return verkuendungsblattKuerzel
   */
  @javax.annotation.Nullable
  public String getVerkuendungsblattKuerzel() {
    return verkuendungsblattKuerzel;
  }

  public void setVerkuendungsblattKuerzel(@javax.annotation.Nullable String verkuendungsblattKuerzel) {
    this.verkuendungsblattKuerzel = verkuendungsblattKuerzel;
  }


  public Verkuendung fundstelle(@javax.annotation.Nonnull String fundstelle) {
    this.fundstelle = fundstelle;
    return this;
  }

  /**
   * Get fundstelle
   * @return fundstelle
   */
  @javax.annotation.Nonnull
  public String getFundstelle() {
    return fundstelle;
  }

  public void setFundstelle(@javax.annotation.Nonnull String fundstelle) {
    this.fundstelle = fundstelle;
  }


  public Verkuendung pdfUrl(@javax.annotation.Nullable String pdfUrl) {
    this.pdfUrl = pdfUrl;
    return this;
  }

  /**
   * Get pdfUrl
   * @return pdfUrl
   */
  @javax.annotation.Nullable
  public String getPdfUrl() {
    return pdfUrl;
  }

  public void setPdfUrl(@javax.annotation.Nullable String pdfUrl) {
    this.pdfUrl = pdfUrl;
  }


  public Verkuendung titel(@javax.annotation.Nullable String titel) {
    this.titel = titel;
    return this;
  }

  /**
   * Get titel
   * @return titel
   */
  @javax.annotation.Nullable
  public String getTitel() {
    return titel;
  }

  public void setTitel(@javax.annotation.Nullable String titel) {
    this.titel = titel;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Verkuendung verkuendung = (Verkuendung) o;
    return Objects.equals(this.jahrgang, verkuendung.jahrgang) &&
        Objects.equals(this.heftnummer, verkuendung.heftnummer) &&
        Objects.equals(this.seite, verkuendung.seite) &&
        Objects.equals(this.ausfertigungsdatum, verkuendung.ausfertigungsdatum) &&
        Objects.equals(this.verkuendungsdatum, verkuendung.verkuendungsdatum) &&
        Objects.equals(this.rubrikNr, verkuendung.rubrikNr) &&
        Objects.equals(this.einleitungstext, verkuendung.einleitungstext) &&
        Objects.equals(this.verkuendungsblattBezeichnung, verkuendung.verkuendungsblattBezeichnung) &&
        Objects.equals(this.verkuendungsblattKuerzel, verkuendung.verkuendungsblattKuerzel) &&
        Objects.equals(this.fundstelle, verkuendung.fundstelle) &&
        Objects.equals(this.pdfUrl, verkuendung.pdfUrl) &&
        Objects.equals(this.titel, verkuendung.titel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jahrgang, heftnummer, seite, ausfertigungsdatum, verkuendungsdatum, rubrikNr, einleitungstext, verkuendungsblattBezeichnung, verkuendungsblattKuerzel, fundstelle, pdfUrl, titel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Verkuendung {\n");
    sb.append("    jahrgang: ").append(toIndentedString(jahrgang)).append("\n");
    sb.append("    heftnummer: ").append(toIndentedString(heftnummer)).append("\n");
    sb.append("    seite: ").append(toIndentedString(seite)).append("\n");
    sb.append("    ausfertigungsdatum: ").append(toIndentedString(ausfertigungsdatum)).append("\n");
    sb.append("    verkuendungsdatum: ").append(toIndentedString(verkuendungsdatum)).append("\n");
    sb.append("    rubrikNr: ").append(toIndentedString(rubrikNr)).append("\n");
    sb.append("    einleitungstext: ").append(toIndentedString(einleitungstext)).append("\n");
    sb.append("    verkuendungsblattBezeichnung: ").append(toIndentedString(verkuendungsblattBezeichnung)).append("\n");
    sb.append("    verkuendungsblattKuerzel: ").append(toIndentedString(verkuendungsblattKuerzel)).append("\n");
    sb.append("    fundstelle: ").append(toIndentedString(fundstelle)).append("\n");
    sb.append("    pdfUrl: ").append(toIndentedString(pdfUrl)).append("\n");
    sb.append("    titel: ").append(toIndentedString(titel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("jahrgang");
    openapiFields.add("heftnummer");
    openapiFields.add("seite");
    openapiFields.add("ausfertigungsdatum");
    openapiFields.add("verkuendungsdatum");
    openapiFields.add("rubrik_nr");
    openapiFields.add("einleitungstext");
    openapiFields.add("verkuendungsblatt_bezeichnung");
    openapiFields.add("verkuendungsblatt_kuerzel");
    openapiFields.add("fundstelle");
    openapiFields.add("pdf_url");
    openapiFields.add("titel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("jahrgang");
    openapiRequiredFields.add("seite");
    openapiRequiredFields.add("ausfertigungsdatum");
    openapiRequiredFields.add("verkuendungsdatum");
    openapiRequiredFields.add("einleitungstext");
    openapiRequiredFields.add("fundstelle");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Verkuendung
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Verkuendung.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Verkuendung is not found in the empty JSON string", Verkuendung.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Verkuendung.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Verkuendung` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Verkuendung.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("jahrgang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jahrgang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jahrgang").toString()));
      }
      if ((jsonObj.get("heftnummer") != null && !jsonObj.get("heftnummer").isJsonNull()) && !jsonObj.get("heftnummer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `heftnummer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("heftnummer").toString()));
      }
      if (!jsonObj.get("seite").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seite` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seite").toString()));
      }
      if ((jsonObj.get("rubrik_nr") != null && !jsonObj.get("rubrik_nr").isJsonNull()) && !jsonObj.get("rubrik_nr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rubrik_nr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rubrik_nr").toString()));
      }
      if (!jsonObj.get("einleitungstext").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `einleitungstext` to be a primitive type in the JSON string but got `%s`", jsonObj.get("einleitungstext").toString()));
      }
      if ((jsonObj.get("verkuendungsblatt_bezeichnung") != null && !jsonObj.get("verkuendungsblatt_bezeichnung").isJsonNull()) && !jsonObj.get("verkuendungsblatt_bezeichnung").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verkuendungsblatt_bezeichnung` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verkuendungsblatt_bezeichnung").toString()));
      }
      if ((jsonObj.get("verkuendungsblatt_kuerzel") != null && !jsonObj.get("verkuendungsblatt_kuerzel").isJsonNull()) && !jsonObj.get("verkuendungsblatt_kuerzel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verkuendungsblatt_kuerzel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verkuendungsblatt_kuerzel").toString()));
      }
      if (!jsonObj.get("fundstelle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fundstelle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fundstelle").toString()));
      }
      if ((jsonObj.get("pdf_url") != null && !jsonObj.get("pdf_url").isJsonNull()) && !jsonObj.get("pdf_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_url").toString()));
      }
      if ((jsonObj.get("titel") != null && !jsonObj.get("titel").isJsonNull()) && !jsonObj.get("titel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `titel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("titel").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Verkuendung.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Verkuendung' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Verkuendung> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Verkuendung.class));

       return (TypeAdapter<T>) new TypeAdapter<Verkuendung>() {
           @Override
           public void write(JsonWriter out, Verkuendung value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Verkuendung read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Verkuendung given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Verkuendung
   * @throws IOException if the JSON string is invalid with respect to Verkuendung
   */
  public static Verkuendung fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Verkuendung.class);
  }

  /**
   * Convert an instance of Verkuendung to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

