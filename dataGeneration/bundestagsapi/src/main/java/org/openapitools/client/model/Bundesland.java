/*
 * Deutscher Bundestag - DIP
 * API des Dokumentations- und Informationssystems für Parlamentsmaterialien
 *
 * The version of the OpenAPI document: 1.3
 * Contact: parlamentsdokumentation@bundestag.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Das Bundesland wird bei persönlichen Urhebern verwendet, die Mitglieder des Bundesrates sind, z. B. „Reinhold Hilbers, MdBR (Finanzminister), Niedersachsen“
 */
@JsonAdapter(Bundesland.Adapter.class)
public enum Bundesland {
  
  BADEN_W_RTTEMBERG("Baden-Württemberg"),
  
  BAYERN("Bayern"),
  
  BERLIN("Berlin"),
  
  BRANDENBURG("Brandenburg"),
  
  BREMEN("Bremen"),
  
  HAMBURG("Hamburg"),
  
  HESSEN("Hessen"),
  
  MECKLENBURG_VORPOMMERN("Mecklenburg-Vorpommern"),
  
  NIEDERSACHSEN("Niedersachsen"),
  
  NORDRHEIN_WESTFALEN("Nordrhein-Westfalen"),
  
  RHEINLAND_PFALZ("Rheinland-Pfalz"),
  
  SAARLAND("Saarland"),
  
  SACHSEN("Sachsen"),
  
  SACHSEN_ANHALT("Sachsen-Anhalt"),
  
  SCHLESWIG_HOLSTEIN("Schleswig-Holstein"),
  
  TH_RINGEN("Thüringen");

  private String value;

  Bundesland(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Bundesland fromValue(String value) {
    for (Bundesland b : Bundesland.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Bundesland> {
    @Override
    public void write(final JsonWriter jsonWriter, final Bundesland enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Bundesland read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Bundesland.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    Bundesland.fromValue(value);
  }
}

